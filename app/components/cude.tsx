/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { MeshReflectorMaterial, useGLTF, useTexture } from '@react-three/drei'
import { LinearEncoding } from "@react-three/drei/helpers/deprecated"

export function Cude(props) {
  const { nodes, materials } = useGLTF('/assets/models/out (13).glb')
  const textures = useTexture({
    map: "/assets/texture/Base_baseColor.jpeg",
    aoMap: "/assets/texture/Base_occlusionRoughnessMetallicR.jpeg",
    roughnessMap: "/assets/texture/Base_occlusionRoughnessMetallicG.jpeg",
    metalnessMap: "/assets/texture/Base_occlusionRoughnessMetallicB.jpeg",
    normalMap: "/assets/texture/Base_normal.jpeg",
    alphaMap: "/assets/texture/internal_ground_ao_texture.jpeg",
  })
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.HUG_ARMCHAIRHUG_Armchair_602_014.geometry}
        // material={materials.Base}
        position={[0, 40.986, 0]}
        scale={43.314}
      >
        <meshStandardMaterial {...textures} normalMap-encoding={LinearEncoding} />
      </mesh>
      <mesh rotation={[-Math.PI / 2, 0, 0]} position-y={-2}>
        <planeGeometry args={[300, 300]} />
        <MeshReflectorMaterial
          blur={[300, 100]}
          resolution={2048}
          mixBlur={1}
          mixStrength={40}
          roughness={1}
          depthScale={1.2}
          minDepthThreshold={0.4}
          maxDepthThreshold={1.4}
          color="#ffffff"
          metalness={0.5}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/assets/models/out (13).glb')